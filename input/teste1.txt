var inicio
    inteiro x, y, z;
    caractere a, b;
    real c;
    booleano eF,g,H;
    cadeia um4Str1ng, outraString;
    inteiro vet<<<2,3,4>>>;
    inteiro vet2<<<2,3>>>;
fim

const inicio
    inteiro X  << 3,
        Y << 45,Z<<1000;
    caractere C << 'c';
    real aBc << 3.14, 
        DeF << 3.1415926535897932384626433832795 ;
    booleano taSerto << falso, TaCerto << verdadeiro;
    cadeia hue << "heuheuheuheuh";
fim

programa inicio
    vet << vet2;
    a << 'a';
    um4Str1ng << "abc";
    eF << a;
    c << H;
    x << b;
    vet2<<<2,3>>> << b;
    b << vet2<<<2,3>>>;
    outraString << eF;
    X << a;
    yy << (2 + 1) * outraString;
    z << umaFuncao() / 2;
    outraFuncao(4,3.14);

    leia(X,yy,  z);

    enquanto (x > c) faca inicio
        inteiro int1;
        int1 << outraFuncao(1,2.0,falso);
    fim

    int1 << 5;

    se (c < a) entao inicio
    fim
fim

funcao umaFuncao() inicio
    inteiro x, y, z;
    caractere a, b;
    real c;
    booleano eF,g,H;
    cadeia um4Str1ng;
fim

funcao inteiro outraFuncao(inteiro i, real j, booleano k) inicio
    caractere i;
    inteiro j, X;
    real k;

    X << x + outraFuncao(1,2.0,falso);
fim
